#! /usr/bin/env python

import sys
import numpy as np
from pyscf import gto, scf, ao2mo, symm



inp_file = str(sys.argv[1])
exec(open(inp_file).read())



#==== Setting up the system ====#
mol = gto.M(atom=inp_coordinates, basis=inp_basis, ecp=inp_ecp, symmetry=inp_symmetry)
na, nb = mol.nelec
pg = mol.symmetry.lower()
n_mo = mol.nao
print('Point group = ', mol.groupname)
print('Number of electrons (alpha, beta) = ', mol.nelec)
print('Number of AO bases = ', mol.nao)
print('Number of MO bases = ', n_mo)


#==== Run HF on the neutral molecule to obtain the orbitals ====#
print('>>>> Hartree-Fock calculation of the neutral <<<<')
mf = scf.RHF(mol)
mf.kernel()
osym = scf.hf_symm.get_orbsym(mol, mf.mo_coeff)[0:n_mo]
osym_l = [symm.irrep_id2name(mol.groupname, s) for s in osym]
np.save('./' + prefix + '.hfo', mf.mo_coeff)


#==== Determine the no. of unique spin channels ====#
if len(mf.mo_coeff.shape) == 3:
    ns = 2
elif len(mf.mo_coeff.shape) == 2:
    ns = 1
    

#==== Recast MO coefficients into another array ====#
mo_c = np.zeros((ns, n_mo, n_mo))
if ns == 1:
    mo_c[0,:,:] = mf.mo_coeff
elif ns == 2:
    mo_c = mf.mo_coeff


#==== Get the index of the sorted MO coefficients ====#
idsort = np.zeros((ns, n_mo, n_mo))
for s in range(0, ns):
    for i in range(0, n_mo):
        idsort[s,:,i] = np.argsort(np.abs(mo_c[s,:,i]))   # Sort from smallest to largest.
        idsort[s,:,i] = idsort[s,::-1,i]                  # Sort from largest to smallest.

print('eri shape, size = ', mf._eri.shape, mf._eri.size)
print('MO coeff shape = ', mf.mo_coeff.shape)


#==== Construct various labels ====#
atom_label = [None] * n_mo
sph_label =  [None] * n_mo
for i in range(0, n_mo):
    ao_label = mol.ao_labels(fmt=False)[i]
    atom_label[i] = ao_label[1] + str(ao_label[0])
    if ao_label[3] == '':
        sph_label[i] = 's'
    else:
        sph_label[i] = ao_label[3]


#==== Print orbital properties ====#
ln_atom = [len(ss) for ss in atom_label]
ln_sph = [len(ss) for ss in sph_label]
atom_fmt = '%' + str(max(ln_atom)) + 's'
sph_fmt = '%' + str(max(ln_sph)) + 's'
hline = ''.join(['-' for i in range(0, 127)])
hline_ = ''.join(['-' for i in range(0, 125)])
nlarge = min(6, n_mo)

for s in range(0, ns):
    if ns == 2:
        print('Orbital properties of spin-%s channel:' % ('alpha' if s==0 else 'beta'))
    elif ns == 1:
        print('Orbital properties:')

    #== Column headers ==#
    space1 = '    '
    print(hline)
    print(' %4s %14s %14s %10s%s%s' % (\
            'No.', 'Occupation', 'Energy', 'Irrep.', space1,
            'Six largest coefficients (value, center, spher.)'))
    print(hline)
    for i in range(0,n_mo):
        print(' %4d %14.8f %14.8f %10s' % \
              (i+1, mf.mo_occ[i], mf.mo_energy[i], osym_l[i]+' / '+str(osym[i])),
              end=space1)

        for j in range(0,nlarge):
            jj = int(idsort[s,j,i])

            if (j == int(nlarge/2)):
                print('')
                print('%46s' % '', end=space1)
            coeff_str = "{:.6f}".format(mo_c[s,jj,i])
            print('%s' % \
                  ('('+coeff_str+', '+atom_label[jj]+', '+sph_label[jj])+')', end='  ')
        print('')
        print(' '+hline_)
